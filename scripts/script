#!/usr/bin/env escript
%% -*- erlang -*-
%%! -smp enable -sname worker -mnesia debug verbose

main([LOCAL_ADDRESS,LOCAL_ID,N_THREADS,INIT_VALUE, ROOT, ID_PREFIX, BUCKET, BUCKET_TYPE, RESET | OTHER_SERVER_ADDRESSES]) ->
		true = code:add_path(string:concat(ROOT, "riak-erlang-client/ebin")),
		true = code:add_path(string:concat(ROOT, "riak-erlang-client/ebin")),
		true = code:add_path(string:concat(ROOT, "riak-erlang-client/deps/meck/ebin")), 
		true = code:add_path(string:concat(ROOT, "riak-erlang-client/deps/protobuffs/ebin")),
		true = code:add_path(string:concat(ROOT, "riak-erlang-client/deps/riak_pb/ebin")),
		true = code:add_path(string:concat(ROOT, "")),

        N = list_to_integer(N_THREADS),
		V = list_to_integer(INIT_VALUE),


		BUCKET_TERM = {list_to_binary(BUCKET_TYPE), list_to_binary(BUCKET)},
		
		{IDS,_} = lists:mapfoldl(fun(_,Count) ->
			{string:concat(ID_PREFIX,integer_to_list(Count)),Count+1} end,1,OTHER_SERVER_ADDRESSES),

		io:format("Local Id: ~p. Other Ids: ~p~n",[LOCAL_ID, IDS]),
		io:format("ALL Addresses: ~p~n",[[LOCAL_ADDRESS | OTHER_SERVER_ADDRESSES]]),

		case RESET of 
			"true" -> 
				worker_sc:reset_crdt(V,BUCKET_TERM,LOCAL_ID,[LOCAL_ADDRESS | OTHER_SERVER_ADDRESSES],IDS);
			_ -> ok
		end,

		Stats = client_stats:start(N,V),
		worker_sc:start(init, N, 0, Stats, LOCAL_ADDRESS, BUCKET_TERM, LOCAL_ID).
